<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hb56.client.api.dao.ApiHeaderMapper">
  <resultMap id="BaseResultMap" type="ApiHeader">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="param" jdbcType="VARCHAR" property="param" />
    <result column="param_type" jdbcType="VARCHAR" property="paramType" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="is_requried" jdbcType="BIT" property="isRequried" />
    <result column="api_id" jdbcType="INTEGER" property="apiId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, param, param_type, description, is_requried, api_id
  </sql>
  <select id="selectByExample" parameterType="ApiHeaderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from api_header
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from api_header
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from api_header
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ApiHeaderExample">
    delete from api_header
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ApiHeader">
    insert into api_header (id, param, param_type, 
      description, is_requried, api_id
      )
    values (#{id,jdbcType=INTEGER}, #{param,jdbcType=VARCHAR}, #{paramType,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{isRequried,jdbcType=BIT}, #{apiId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="ApiHeader">
    insert into api_header
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="param != null">
        param,
      </if>
      <if test="paramType != null">
        param_type,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="isRequried != null">
        is_requried,
      </if>
      <if test="apiId != null">
        api_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="param != null">
        #{param,jdbcType=VARCHAR},
      </if>
      <if test="paramType != null">
        #{paramType,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="isRequried != null">
        #{isRequried,jdbcType=BIT},
      </if>
      <if test="apiId != null">
        #{apiId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ApiHeaderExample" resultType="java.lang.Integer">
    select count(*) from api_header
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update api_header
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.param != null">
        param = #{record.param,jdbcType=VARCHAR},
      </if>
      <if test="record.paramType != null">
        param_type = #{record.paramType,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.isRequried != null">
        is_requried = #{record.isRequried,jdbcType=BIT},
      </if>
      <if test="record.apiId != null">
        api_id = #{record.apiId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update api_header
    set id = #{record.id,jdbcType=INTEGER},
      param = #{record.param,jdbcType=VARCHAR},
      param_type = #{record.paramType,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      is_requried = #{record.isRequried,jdbcType=BIT},
      api_id = #{record.apiId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ApiHeader">
    update api_header
    <set>
      <if test="param != null">
        param = #{param,jdbcType=VARCHAR},
      </if>
      <if test="paramType != null">
        param_type = #{paramType,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="isRequried != null">
        is_requried = #{isRequried,jdbcType=BIT},
      </if>
      <if test="apiId != null">
        api_id = #{apiId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ApiHeader">
    update api_header
    set param = #{param,jdbcType=VARCHAR},
      param_type = #{paramType,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      is_requried = #{isRequried,jdbcType=BIT},
      api_id = #{apiId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id" >
    insert into api_header (id, param, param_type,
    description, is_requried, api_id
    )
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.param,jdbcType=VARCHAR}, #{item.paramType,jdbcType=VARCHAR},
      #{item.description,jdbcType=VARCHAR}, #{item.isRequried,jdbcType=BIT}, #{item.apiId,jdbcType=INTEGER}
      )
    </foreach>
  </insert>
</mapper>